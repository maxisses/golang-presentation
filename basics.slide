# Basics

## Typing

- Go is _statically typed_.
- Data Types
    - Numbers
        - Integers (signed: `int8`, unsigned: `uint8`)

            ```
            var myIntVar int = 23
            ```
        - Floating-Point Numbers

            ```
            var myFloatVar float64 = 3.14
            ```
    - Strings

        ```
        var myString string = "Hello World"
        ```
    - Booleans
        ```
        var myBool bool = true
        ```

## Typing Examples

.play basicsTypes.go

## Garbage Collection

## Compilation

.link https://github.com/golang/go/tree/master/src/cmd/compile

## Formatting
## Concurrency - Goroutines
Functions which are executed concurrent are called `goroutine`. These are defined as following ([proc.go](https://golang.org/src/runtime/proc.go)):

```
The main concepts are:
G - goroutine.
M - worker thread, or machine.
P - processor, a resource that is required to execute Go code.
    M must have an associated P to execute Go code, however it can be
    blocked or in a syscall w/o an associated P.
```

A `goroutine` is assigned to a Thread which is assigned to a physical CPU.

## Concurrency - Goroutines Beispiel

.play basicsGoroutine.go

## Concurrency - Channels

## Error interface